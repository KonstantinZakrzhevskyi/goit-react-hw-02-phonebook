{"version":3,"sources":["components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Section","title","children","className","s","section","section__title","ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","pattern","required","onChange","disabled","Component","ContactList","contacts","onDeleteContact","map","id","onClick","App","filter","addContact","contact","shortid","generate","includes","alert","prevState","deleteContact","contactId","getVisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAeeA,EAZC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACxB,OAAQ,0BAASC,UAAWC,IAAEC,QAAtB,UACLJ,GAAS,oBAAIE,UAAWC,IAAEE,eAAjB,SAAkCL,IAC3CC,M,QCFEK,E,4MAKJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAMVC,kBAAoB,SAAAC,GAClB,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAACN,KAAM,GAAIC,OAAQ,M,4CAGnC,WACE,MAAyBW,KAAKb,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACE,uBAAMS,SAAUE,KAAKL,aAArB,UACE,yCAEE,uBACEM,KAAK,OACLb,KAAK,OACLK,MAAOL,EACPc,QAAQ,yHACRtB,MAAM,kcACNuB,UAAQ,EACRC,SAAUJ,KAAKV,uBAVrB,IAcE,2CAEE,uBACEW,KAAK,MACLb,KAAK,SACLK,MAAOJ,EACPa,QAAQ,yFACRtB,MAAM,giBACNuB,UAAQ,EACRC,SAAUJ,KAAKV,uBAInB,wBAAQW,KAAK,SAASI,UAAWjB,EAAjC,gC,GA5DkBkB,aAkEXpB,IC7CAqB,EAvBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,6BACGD,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,+BACE,8BAAID,EAAJ,OACA,4BAAIC,IACJ,wBAAQY,KAAK,SACXW,QAAS,kBAAMH,EAAgBE,IADjC,sBAHOA,SCGTE,G,kNACN1B,MAAQ,CACLqB,SAAU,CACT,CAACG,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC5C,CAACsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,aAC7C,CAACsB,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC5C,CAACsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,cAE/CyB,OAAQ,I,EAGRC,WAAa,YAAqB,IAAnB3B,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OACXmB,EAAa,EAAKrB,MAAlBqB,SAEDQ,EAAU,CACjBL,GAAIM,IAAQC,WACZ9B,OACAC,UAGAmB,EAASE,KAAI,SAAAM,GAAO,OAAIA,EAAQ5B,QAAM+B,SAAS/B,GAC3CgC,MAAM,GAAD,OAAIhC,EAAJ,6BACL,EAAKM,UAAS,SAAA2B,GAAS,MAAK,CAC5Bb,SAAS,CAAEQ,GAAH,mBAAeK,EAAUb,gB,EAIvCc,cAAgB,SAAAC,GACd,EAAK7B,UAAS,SAAA2B,GAAS,MAAK,CAC1Bb,SAAUa,EAAUb,SAASM,QAAO,SAAAE,GAAO,OAAIA,EAAQL,KAAOY,U,EAIlEC,mBAAqB,a,4CAIrB,WAEE,OACE,qCACE,cAAC,EAAD,CAAS5C,MAAM,YAAf,SACE,cAAC,EAAD,CAAakB,SAAUE,KAAKe,eAE9B,cAAC,EAAD,CAASnC,MAAM,WAAf,SACE,cAAC,EAAD,CACE4B,SAAUR,KAAKwB,mBACff,gBAAiBT,KAAKsB,yB,GA/ChBhB,cAuDHO,IC1DfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.78fc63d0.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport s from './Section.module.css'\r\n\r\nconst Section = ({title, children}) => {\r\n return (<section className={s.section}>\r\n   {title && <h2 className={s.section__title}>{title}</h2>}\r\n   {children}\r\n </section> ) \r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default Section;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n// import shortid from 'shortid';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n  \r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  // nameInputId = shortid.generate();\r\n  // numberInputId = shortid.generate();\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({name: '', number: ''})\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleInputChange}\r\n            // id={this.nameInputId}\r\n          />\r\n        </label>.\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleInputChange}\r\n            // id={this.numberInputId}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={!name}>Add contact</button>\r\n      </form>\r\n    );\r\n  };\r\n};\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        <p>{name}:</p>\r\n        <p>{number}</p>\r\n        <button type='button'\r\n          onClick={() => onDeleteContact(id)}>Delete</button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Section from 'components/Section';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\n\nimport './App.css';\n\nclass App extends Component {\nstate = {\n   contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n  filter: '',\n}\n  \n  addContact = ({name, number}) => {\n    const { contacts } = this.state;\n\n     const contact = {\n    id: shortid.generate(),\n    name,\n    number,\n     };\n    \n    contacts.map(contact => contact.name).includes(name)\n      ? alert(`${name} is already in contacts.`)\n      : this.setState(prevState => ({\n        contacts: [contact, ...prevState.contacts],\n      }))\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }))\n  }\n \n  getVisibleContacts = () => {\n\n  };\n  \n  render() {\n    \n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.addContact}/>\n        </Section>\n        <Section title=\"Contacts\">\n          <ContactList\n            contacts={this.getVisibleContacts}\n            onDeleteContact={this.deleteContact} />\n        </Section>\n        \n      </>\n    ) \n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}