{"version":3,"sources":["components/Section/Section.js","components/ContactForm/ContactForm.js","App.js","index.js"],"names":["Section","title","children","className","s","section","section__title","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","required","onChange","id","disabled","Component","App","contacts","filter","addContact","data","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAeeA,EAZC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACxB,OAAQ,0BAASC,UAAWC,IAAEC,QAAtB,UACLJ,GAAS,oBAAIE,UAAWC,IAAEE,eAAjB,SAAkCL,IAC3CC,M,wBCFEK,E,4MAKJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,YAAcC,IAAQC,W,EACtBC,cAAgBF,IAAQC,W,EAExBE,kBAAoB,SAAAC,GAClB,MAAwBA,EAAEC,cAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBV,EAAOS,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKf,OACzB,EAAKgB,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAACV,KAAM,GAAIC,OAAQ,M,4CAGnC,WACE,MAAyBe,KAAKjB,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACE,uBAAMa,SAAUE,KAAKL,aAArB,UACE,wBAAOM,QAASD,KAAKd,YAArB,iBAEE,uBACEgB,KAAK,OACLlB,KAAK,OACLS,MAAOT,EACPmB,QAAQ,yHACR3B,MAAM,kcACN4B,UAAQ,EACRC,SAAUL,KAAKV,kBACfgB,GAAIN,KAAKd,iBAXf,IAcE,wBAAOe,QAASD,KAAKX,cAArB,mBAEE,uBACEa,KAAK,MACLlB,KAAK,SACLS,MAAOR,EACPkB,QAAQ,yFACR3B,MAAM,giBACN4B,UAAQ,EACRC,SAAUL,KAAKV,kBACfgB,GAAIN,KAAKX,mBAGb,wBAAQa,KAAK,SAASK,UAAWvB,EAAjC,gC,GA5DkBwB,aAkEX1B,IC5DT2B,G,kNACN1B,MAAQ,CACL2B,SAAU,CACT,CAACJ,GAAI,OAAQtB,KAAM,gBAAiBC,OAAQ,aAC5C,CAACqB,GAAI,OAAQtB,KAAM,iBAAkBC,OAAQ,aAC7C,CAACqB,GAAI,OAAQtB,KAAM,gBAAiBC,OAAQ,aAC5C,CAACqB,GAAI,OAAQtB,KAAM,iBAAkBC,OAAQ,cAE/C0B,OAAQ,I,EAGRC,WAAa,SAAAC,GACXC,QAAQC,IAAIF,I,4CAGd,WAEE,OACE,qCACE,cAAC,EAAD,CAASrC,MAAM,YAAf,SACE,cAAC,EAAD,CAAasB,SAAUE,KAAKY,eAE9B,cAAC,EAAD,CAASpC,MAAM,oB,GAtBLgC,cA+BHC,ICpCfO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.be7e8e15.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport s from './Section.module.css'\r\n\r\nconst Section = ({title, children}) => {\r\n return (<section className={s.section}>\r\n   {title && <h2 className={s.section__title}>{title}</h2>}\r\n   {children}\r\n </section> ) \r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default Section;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport shortid from 'shortid';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n  \r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({name: '', number: ''})\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleInputChange}\r\n            id={this.nameInputId}\r\n          />\r\n        </label>.\r\n        <label htmlFor={this.numberInputId}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleInputChange}\r\n            id={this.numberInputId}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={!name}>Add contact</button>\r\n      </form>\r\n    );\r\n  };\r\n};\r\n\r\nexport default ContactForm;","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\n\nimport './App.css';\n\n// export default function App() {\n//   return 'Hello world!';\n// }\n\nclass App extends Component {\nstate = {\n   contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n  filter: ''\n}\n  \n  addContact = data => {\n    console.log(data);\n  }\n  \n  render() {\n    \n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.addContact}/>\n        </Section>\n        <Section title=\"Contacts\">\n\n        </Section>\n        \n      </>\n    ) \n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}